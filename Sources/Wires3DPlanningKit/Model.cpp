#include "Model.h"

#include <algorithm>

void Model::AddWall(const ModelWall& model_wall)
{
    m_walls.push_back(model_wall);
}
///////////////////////////////////////////////////////////////////////////////////////////////////

void Model::AddSocket(const ModelSocket& model_socket)
{
    m_sockets.push_back(model_socket);
}
///////////////////////////////////////////////////////////////////////////////////////////////////

void Model::Remove(const int id)
{
    const auto it = std::find_if(m_sockets.begin(), m_sockets.end(),
                                 [id](const ModelSocket& model_socket)
    {
        return model_socket.m_id == id;
    });

    if(it == m_sockets.end())
    {
        return;
    }

    m_sockets.erase(it);
}
///////////////////////////////////////////////////////////////////////////////////////////////////

size_t Model::GetWallsNumber()
{
    return m_walls.size();
}
///////////////////////////////////////////////////////////////////////////////////////////////////

size_t Model::GetSocketsNumber()
{
    return m_sockets.size();
}
///////////////////////////////////////////////////////////////////////////////////////////////////